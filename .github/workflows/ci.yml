name: CI

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync --extra dev

    - name: Run ruff check
      run: uv run ruff check

    - name: Run ruff format check
      run: uv run ruff format --check

    - name: Run mypy
      run: uv run mypy src/mits_validator

    - name: Run tests with coverage
      run: uv run pytest --cov=src/mits_validator --cov-report=xml --cov-report=term-missing --cov-fail-under=80

    - name: Validate catalogs
      run: uv run python scripts/validate_catalogs.py

    - name: Run Bandit security scan
      run: uv run bandit -r src/ -f json -o bandit-report.json || true

    - name: Run contract tests
      run: uv run pytest tests/test_contract.py -v

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  container:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/open-mits/mits-validator
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run smoke tests
      run: |
        # Start container in background
        docker run -d --name mits-validator-test \
          -p 8000:8000 \
          ghcr.io/open-mits/mits-validator:latest

        # Wait for container to be ready
        sleep 10

        # Run smoke tests
        chmod +x scripts/smoke-test.sh
        ./scripts/smoke-test.sh 8000

        # Cleanup
        docker stop mits-validator-test
        docker rm mits-validator-test

  performance:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --extra dev

    - name: Run performance benchmarks
      run: uv run pytest tests/benchmarks/ -v

    - name: Run load tests
      run: |
        # Start the service
        uv run uvicorn src.mits_validator.api:app --port 8000 &
        sleep 5

        # Run load tests
        for i in {1..10}; do
          curl -X POST -F "file=@fixtures/mits5/valid-property.xml" http://localhost:8000/v1/validate &
        done
        wait

        # Stop the service
        pkill -f uvicorn
